{"version":3,"sources":["components/form/TodoForm.js","components/list/list-item/TodoItem.js","components/list/TodoList.js","localStorage.js","App.js","index.js"],"names":["TodoForm","props","className","Form","onSubmit","e","preventDefault","writeData","error","Label","basic","pointing","color","style","position","zIndex","top","transform","Input","icon","Icon","name","onClick","circular","link","backgroundColor","placeholder","value","todoTitle","onChange","getTodoTitle","TodoItem","checkedItem","getEditText","title","checked","List","Item","display","alignItems","padding","Checkbox","id","Content","edit","action","Button","type","applyEditing","Header","as","Group","size","activateEditing","deleteItem","TodoList","divided","relaxed","itemsList","map","item","key","updateLocalStorage","localStorage","setItem","JSON","stringify","App","state","setState","target","todoItem","Date","now","concat","event","filter","prevState","i","parse","getItem","this","length","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9200a83.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Label, Icon } from 'semantic-ui-react'\r\n\r\n\r\nfunction TodoForm(props) {\r\n    const errorStyle = {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        top: 0,\r\n        transform: 'translateY(-150%)'\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        < div className=\"todo-body-form\" >\r\n            <Form\r\n                onSubmit={\r\n                    (e) => {\r\n                        e.preventDefault();\r\n                        props.writeData();\r\n                    }\r\n                }\r\n            >\r\n                {props.error ?\r\n                    <Label\r\n                        basic\r\n                        pointing='below'\r\n                        color='red'\r\n                        style={errorStyle}\r\n                    >\r\n                        Please enter a value\r\n            </Label> : null\r\n                }\r\n\r\n                <Form.Input\r\n                    icon={\r\n                        <Icon\r\n                            name='plus'\r\n                            onClick={props.writeData}\r\n\r\n                            circular\r\n                            link\r\n                            style={{ backgroundColor: 'blue !important' }}\r\n                        />\r\n                    }\r\n                    placeholder='Add Item'\r\n                    value={props.todoTitle}\r\n                    onChange={props.getTodoTitle}\r\n                >\r\n                </Form.Input>\r\n            </Form>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TodoForm","import React from 'react';\r\nimport { List, Checkbox, Button, Input } from 'semantic-ui-react'\r\n\r\nfunction TodoItem(props) {\r\n    const { checkedItem, getEditText, title, checked } = props;\r\n\r\n    const itemStyle = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '1rem 0'\r\n    }\r\n\r\n    return (\r\n\r\n        < List.Item\r\n            className=\"todo-body-list-item\"\r\n            style={itemStyle}\r\n        >\r\n            <Checkbox\r\n                className=\"todo-body-list-item-checkbox\"\r\n                onClick={checkedItem(props.id)}\r\n                checked={checked}\r\n            />\r\n\r\n            <List.Content\r\n                className=\"todo-body-list-item-content\"\r\n            >\r\n                {props.edit\r\n                    ? <Input\r\n                        action\r\n                        placeholder='Edit...'\r\n                        value={title}\r\n                        onChange={getEditText(props.id)}\r\n                        className=\"todo-body-list-item-content-input\"\r\n                    >\r\n                        <input />\r\n                        <Button\r\n                            type='submit'\r\n                            onClick={props.applyEditing(props.id)}\r\n                        >\r\n                            Apply\r\n                        </Button>\r\n                    </Input>\r\n                    : <List.Header\r\n                        as='h3'\r\n                        className={props.checked ? \"disabled\" : ''}\r\n                    >\r\n                        {props.title}\r\n                    </List.Header>\r\n                }\r\n            </List.Content>\r\n\r\n            <Button.Group basic size='large'>\r\n                <Button\r\n                    icon='edit'\r\n                    onClick={props.activateEditing(props.id)}\r\n                />\r\n                <Button\r\n                    icon='delete'\r\n                    onClick={props.deleteItem(props.id)}\r\n                />\r\n            </Button.Group>\r\n\r\n        </List.Item >\r\n    )\r\n}\r\n\r\nexport default TodoItem","import React from 'react';\r\nimport { List, Header } from 'semantic-ui-react';\r\nimport TodoItem from './list-item/TodoItem'\r\n\r\nfunction TodoList(props) {\r\n\r\n    return (\r\n\r\n        < div className=\"todo-body-list\" >\r\n            <List divided relaxed>\r\n                <Header as='h2' className=\"todo-body-list__header\">Tasks</Header>\r\n\r\n                {props.itemsList.map(item =>\r\n                    <TodoItem\r\n                        title={item.title}\r\n                        key={item.id}\r\n                        id={item.id}\r\n                        edit={item.edit}\r\n                        checked={item.checked}\r\n                        deleteItem={props.deleteItem}\r\n                        activateEditing={props.activateEditing}\r\n                        getEditText={props.getEditText}\r\n                        applyEditing={props.applyEditing}\r\n                        checkedItem={props.checkedItem}\r\n                    />\r\n                )}\r\n\r\n            </List>\r\n        </div >\r\n    )\r\n}\r\nexport default TodoList","const LOCAL_ITEMS = 'LOCAL_ITEMS';\r\n\r\nexport const updateLocalStorage = (itemsList) => {\r\n    localStorage.setItem(LOCAL_ITEMS, JSON.stringify(itemsList));\r\n}\r\n\r\nexport const getItemsList = () => (\r\n    JSON.parse(localStorage.getItem(LOCAL_ITEMS)) || []\r\n)","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport TodoForm from './components/form/TodoForm'\nimport TodoList from './components/list/TodoList'\nimport { updateLocalStorage, getItemsList } from './localStorage'\n\nclass App extends Component {\n  state = {\n    itemsList: [],\n    todoTitle: '',\n    error: false,\n  }\n\n  componentDidMount() {\n    const itemsList = getItemsList();\n\n    this.setState({ itemsList });\n  }\n\n  getTodoTitle = (e) => {\n    this.setState({\n      todoTitle: e.target.value\n    })\n  }\n\n  writeData = () => {\n    if (this.state.todoTitle) {\n      let todoItem = {\n        title: this.state.todoTitle,\n        id: Date.now(),\n        edit: false,\n        checked: false,\n      }\n      const { itemsList } = this.state;\n\n      this.setState({\n        itemsList: itemsList.concat(todoItem),\n        error: false,\n        todoTitle: ''\n      }, () => {\n        updateLocalStorage(this.state.itemsList)\n      })\n\n    } else {\n      this.setState({\n        error: true\n      })\n    }\n\n  }\n\n  activateEditing = (id) => {\n    const { itemsList } = this.state;\n\n    return () => {\n      this.setState({\n        itemsList: itemsList.map(item => item.id === id\n          ? { ...item, edit: true } : item)\n      })\n    }\n  }\n\n  getEditText = (id) => {\n    const { itemsList } = this.state;\n\n    return (event) => {\n      this.setState({\n        itemsList: itemsList.map(item => item.id === id\n          ? { ...item, title: event.target.value } : item)\n      })\n    }\n  }\n\n  applyEditing = (id) => {\n    const { itemsList } = this.state;\n\n    return () => {\n      this.setState({\n        itemsList: itemsList.map(item => item.id === id\n          ? { ...item, edit: false } : item)\n      }, () => {\n        updateLocalStorage(this.state.itemsList)\n      })\n    }\n  }\n\n  deleteItem = (id) => {\n    const { itemsList } = this.state;\n\n    return () => {\n      this.setState({\n        itemsList: itemsList.filter(item => item.id !== id)\n      }, () => {\n        updateLocalStorage(this.state.itemsList)\n      })\n    }\n  }\n\n  checkedItem = (id) => {\n    const { itemsList } = this.state;\n\n    return () => {\n      this.setState(\n        (prevState => ({\n          itemsList: itemsList.map((item, i) => item.id === id\n            ? { ...item, checked: !prevState.itemsList[i].checked } : item)\n        })),\n        () => {\n          updateLocalStorage(this.state.itemsList)\n        }\n      );\n    }\n  }\n\n  render() {\n    const { itemsList, todoTitle, error } = this.state;\n\n    return (\n      <div className=\"todo\">\n\n        <div className=\"todo-header\">\n          <Header as='h1'>TODO list</Header>\n        </div>\n\n        <div className=\"todo-body\">\n\n          <TodoForm\n            todoTitle={todoTitle}\n            getTodoTitle={this.getTodoTitle}\n            writeData={this.writeData}\n            error={error}\n          />\n\n          {!!itemsList.length\n            && (\n              <TodoList\n                itemsList={itemsList}\n                deleteItem={this.deleteItem}\n                activateEditing={this.activateEditing}\n                getEditText={this.getEditText}\n                applyEditing={this.applyEditing}\n                checkedItem={this.checkedItem}\n              />\n            )\n          }\n\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport './App.sass';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}